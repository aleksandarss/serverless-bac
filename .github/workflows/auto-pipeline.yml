name: Serverless deploy pipeline
on: [push]

jobs:
  check:
    name: Check changed files
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
      matrix: ${{ steps.check_files.outputs.matrix }}
      backend_jobs: ${{ steps.check_files.outputs.backend_jobs }}
      infra_deps_jobs: ${{ steps.check_files.outputs.infra_deps_jobs }}
      infra_jobs: ${{ steps.check_files.outputs.infra_jobs }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check files
        id: check_files
        run: |
          echo "=============== list changed files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of changed files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          cat files.txt
          changed_files="["
          backend_files="["
          infra_deps_files="["
          infra_files="["
          while IFS= read -r file
          do
              echo $file
              if [[ $file == backend* ]];
              then
                file=${file%/*}
                backend_files+="\"${file}\", "
              elif [[ $file == infrastructure-deps* ]];
              then
                file=${file%/*}
                infra_deps_files+="\"${file}\", "
              elif [[ $file == infrastructure* ]];
              then
                file=${file%/*}
                infra_files="\"${file}\", "
              fi
              
              # changed_files+="\"${file}\", "
          done < files.txt
          # changed_files=$(echo $changed_files | sed 's/.$//')
          # changed_files="{\"file\": $changed_files]}"

          if [[ ${#backend_files} > 2 ]];
          then
            backend_files=$(echo $backend_files | sed 's/.$//')
            backend_files="{\"file\": $backend_files]}"
            echo "::set-output name=backend_jobs::$backend_files"
          fi

          if [[ ${#infra_deps_files} > 2 ]];
          then
            infra_deps_files=$(echo $infra_deps_files | sed 's/.$//')
            infra_deps_files="{\"file\": $infra_deps_files]}"
            echo "infra deps files changed!"
            echo $infra_deps_files
            echo "::set-output name=infra_deps_jobs::$infra_deps_files"
          fi

          if [[ ${#infra_files} > 2 ]];
          then
            infra_files=$(echo $infra_files | sed 's/.$//')
            infra_files="{\"file\": $infra_files]}"
            echo "::set-output name=infra_jobs::$infra_files"
          fi

          # echo "::set-output name=matrix::$changed_files"
          # echo "::set-output name=matrix::{\"file\": [\".github/workflows/pipeline.yml\", \"backend/getItems/serverless.yml\", \"backend/getProduct/serverless.yml\"]}"
          

  # build_backend:
  #   name: BuildBackend
  #   needs: check
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  
  deploy_infra_deps:
    name: Deploy infra deps
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.check.outputs.infra_deps_jobs) }}
    steps:
      - name: checkout infra deps
        uses: actions/checkout@v2
      - name: serverless deploy of infra deps
        uses: serverless/github-action@master
        with:
          args: deploy --stage dev --config /${{ matrix.file }}/serverless.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'

  job_for_env1:
    name: Job for env1
    needs: check
    # if: needs.check.outputs.run_job == 'true' 
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.check.outputs.matrix) }}
    steps:
      - name: run for env1
        run: |
          echo ${{ matrix.file }}

  test_aws_cli:
    name: aws cli test
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'us-east-1'
    steps:
      - name: s3 ls
        run: |
          aws s3api list-buckets

  deploy-infra-dependencies:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  