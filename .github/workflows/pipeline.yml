name: Serverless deploy pipeline
on: [push]

jobs:
  check:
    name: Check changed files
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
      matrix: ${{ steps.check_files.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check files
        id: check_files
        run: |
          echo "=============== list changed files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of changed files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          cat files.txt
          changed_files="["
          while IFS= read -r file
          do
              echo $file
              changed_files+="\"${file}\", "
          done < files.txt
          echo $changed_files
          changed_files=$(echo $changed_files | sed 's/.$//')
          changed_files="{\"file\": $changed_files]}"
          echo $changed_files
          echo "::set-output name=matrix::$changed_files"
          # echo "::set-output name=matrix::{\"file\": [\".github/workflows/pipeline.yml\", \"backend/getItems/serverless.yml\", \"backend/getProduct/serverless.yml\"]}"
          

  # build_backend:
  #   name: BuildBackend
  #   needs: check
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:


  job_for_env1:
    name: Job for env1
    needs: check
    # if: needs.check.outputs.run_job == 'true' 
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.check.outputs.matrix) }}
    steps:
      - name: run for env1
        run: |
          echo ${{ matrix.file }}

  deploy-infra-dependencies:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  